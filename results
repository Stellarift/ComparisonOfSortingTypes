Результаты эксперимента
Таблица 1. Время выполнения алгоритмов (миллисекунды)

| Алгоритм | 1000 элементов | 10000 элементов | 100000 элементов |
|----------|----------------|-----------------|------------------|
| Bubble sort | 28.9 ms | 3162.9 ms | 344428.9 ms |
| Selection sort | 11.9 ms | 1130.9 ms | 121462.2 ms |
| Insertion sort | 14.4 ms | 1530.0 ms | 166888.1 ms |
| Quick sort | 0.9 ms | 12.3 ms | 158.1 ms |
| Merge sort | 1.5 ms | 19.2 ms | 240.4 ms |
| Shaker sort | 31.1 ms | 3169.1 ms | 342384.5 ms |

Таблица 2. Время выполнения в секундах
| Алгоритм | 1000 элементов | 10000 элементов | 100000 элементов |
|----------|----------------|-----------------|------------------|
| Bubble sort | 0.029 сек | 3.163 сек | 344.429 сек |
| Selection sort | 0.012 сек | 1.131 сек | 121.462 сек |
| Insertion sort | 0.014 сек | 1.530 сек | 166.888 сек |
| Quick sort | 0.0009 сек | 0.012 сек | 0.158 сек |
| Merge sort | 0.0015 сек | 0.019 сек | 0.240 сек |
| Shaker sort | 0.031 сек | 3.169 сек | 342.385 сек |

 Таблица 3. Сравнение временной сложности алгоритмов
| Алгоритм | Лучший случай | Средний случай | Худший случай | Потребление памяти |
|----------|---------------|----------------|---------------|-------------------|
| Bubble sort | O(n) | O(n²) | O(n²) | O(1) |
| Selection sort | O(n²) | O(n²) | O(n²) | O(1) |
| Insertion sort | O(n) | O(n²) | O(n²) | O(1) |
| Quick sort | O(n log n) | O(n log n) | O(n²) | O(log n) |
| Merge sort | O(n log n) | O(n log n) | O(n log n) | O(n) |
| Shaker sort | O(n) | O(n²) | O(n²) | O(1) |

 1. По размерностям массива:

Малые массивы (1000 элементов):
- Все алгоритмы работают достаточно быстро (< 32 мс)
- Лучший: Quick Sort (0.9 мс)
- Selection Sort неожиданно эффективен среди O(n²) алгоритмов

Средние массивы (10000 элементов):
- O(n²) алгоритмы начинают значительно отставать (1-3 секунды)
- Лучший: Quick Sort (12.3 мс), в 257 раз быстрее Bubble Sort
- Рекомендуется использовать только O(n log n) алгоритмы

Большие массивы (100000 элементов):
- O(n²) алгоритмы непригодны (2-6 минут)
- Лучший: Quick Sort (0.158 сек), в 2180 раз быстрее Bubble Sort
- Только O(n log n) алгоритмы практичны для больших данных

 2. По эффективности алгоритмов:

Лидер: Quick Sort - лучшая производительность на всех размерах
Стабильный выбор: Merge Sort - надежная производительность, предсказуемое поведение
Учебные алгоритмы: Bubble, Selection, Insertion, Shaker - подходят только для обучения
